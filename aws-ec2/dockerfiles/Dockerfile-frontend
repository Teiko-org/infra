FROM node:20-alpine AS build
WORKDIR /app

# Evita downloads/avisos desnecessários no build
ENV BROWSERSLIST_IGNORE_OLD_DATA=true \
    npm_config_audit=false \
    npm_config_fund=false \
    npm_config_loglevel=warn

# Instala primeiro somente manifestos para cache eficaz
COPY ./frontend/carambolo-doces/package*.json ./

# Instala dependências (inclui opcionais para rollup) com cache
RUN npm ci --include=optional --no-audit --no-fund || npm install --include=optional --no-audit --no-fund
# Garante binário musl do Rollup no Alpine
RUN npm i -D @rollup/rollup-linux-x64-musl --no-save || true

# Copia o código depois para aproveitar cache de deps
COPY ./frontend/carambolo-doces ./

# Build mais rápido (sem minificação nem sourcemap)
RUN npm run build -- --minify=false --sourcemap=false

# Runtime leve (Node para servir via Express)
FROM node:20-alpine
WORKDIR /app
ENV NODE_ENV=production
RUN npm init -y && npm i express http-proxy-middleware
COPY infra/aws-ec2/dockerfiles/server.js /app/server.js
COPY --from=build /app/dist /app/dist
EXPOSE 8080
CMD ["node", "server.js"]


