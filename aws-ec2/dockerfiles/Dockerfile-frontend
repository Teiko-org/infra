FROM node:20-alpine AS build
WORKDIR /app

# Copia o frontend Vite
COPY ./frontend/carambolo-doces /app

# Instala dependências build essenciais para binários nativos
RUN apk add --no-cache python3 make g++

# Remove package-lock.json e node_modules para forçar reinstalação limpa
RUN rm -f package-lock.json && rm -rf node_modules

# Instala dependências (força instalação de opcionais do rollup)
RUN npm install --include=optional

RUN npm run build

# Evita rate limit/bloqueio do Docker Hub usando mirror público (ECR Public)
FROM node:20-alpine
WORKDIR /app
ENV NODE_ENV=production
RUN npm init -y && npm i express http-proxy-middleware
COPY infra/aws-ec2/dockerfiles/server.js /app/server.js
COPY --from=build /app/dist /app/dist
EXPOSE 8080
CMD ["node", "server.js"]


